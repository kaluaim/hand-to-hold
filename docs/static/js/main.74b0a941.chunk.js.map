{"version":3,"sources":["routes/dashboard/table/row/Row.module.css","App.module.css","components/menu/Menu.module.css","routes/dashboard/table/updateMember/UpdateMember.module.css","routes/dashboard/addMember/AddMember.module.css","routes/login/otp/OTP.module.css","routes/login/Login.module.css","storage/local.js","config/routes.js","components/privateRoute/PrivateRoute.jsx","api/Auth.js","routes/login/otp/OTP.jsx","routes/login/Login.jsx","routes/dashboard/listItem/ListItem.jsx","routes/dashboard/list/createCircle/CreateCircle.jsx","api/Circle.js","routes/dashboard/list/List.jsx","routes/dashboard/table/row/Row.jsx","routes/dashboard/table/updateMember/UpdateMember.jsx","routes/dashboard/table/deleteMember/DeleteMember.jsx","routes/dashboard/table/Table.jsx","routes/dashboard/addMember/AddMember.jsx","routes/dashboard/Dashboard.jsx","Routes.jsx","components/menu/Menu.jsx","App.jsx","serviceWorker.js","index.js","routes/dashboard/list/createCircle/CreateCircle.module.css","routes/dashboard/list/List.module.css","routes/dashboard/table/deleteMember/DeleteMember.module.css","routes/dashboard/Dashboard.module.css","routes/dashboard/listItem/ListItem.module.css"],"names":["module","exports","setUserToken","userToken","console","log","localStorage","setItem","LOGIN_PATH","DASHBOARD_PATH","PrivateRoute","Component","component","isAllowed","redirectTo","other","render","props","to","pathname","state","from","location","login","phone","a","Promise","resolve","setTimeout","status","message","verifyOTP","otp","token","OTP","onChange","open","onClose","onSubmit","onCancel","isUIDisabled","isLoading","errorMsg","center","styles","modal","background","padding","borderRadius","maxWidth","width","minHeight","closeButton","display","className","cs","header","formWrapper","form","red","formInputWrapper","inputWrapper","name","type","value","placeholder","formInput","maxLength","disabled","submitBtn","role","aria-hidden","style","verticalAlign","onClick","Login","isOTPLoading","isOTPOpen","OTPMsg","errorOTPMsg","numReg","RegExp","handleSubmit","e","preventDefault","setState","r","handleChange","test","target","handleOTPChange","handleVerifyOTP","history","push","handleCloseOTP","handleCancelOTP","root","this","rootContent","logo","withRouter","ListItem","id","selected","onSelect","CreateCircle","useState","cName","setCName","clear","DB","fetchAll","data","fetch","c","filter","i","create","circle","JSON","stringify","randomID","guid","members","addMember","member","o","s4","Math","floor","random","toString","substring","List","circles","isCreateCircleOpen","isCCLoading","isCCUIDisabled","errorCCMsg","componentDidMount","reload","componentDidUpdate","prevProps","prevState","snapshot","openCreateCircle","handleCloseCreateCircle","handleCancelCreateCircle","handleCreateCreateCircle","topArea","addButton","listArea","hasFilter","map","key","selectedCircle","Row","onUpdate","onDelete","number","updateButton","deleteButton","UpdateMember","OnChangeName","onChangeNumber","DeleteMember","Table","selectedMember","nameToUpdate","numberToUpdate","isUpdateMemberOpen","isUMLoading","isUMUIDisabled","errorUMMsg","isDeleteMemberOpen","isDMLoading","isDMUIDisabled","openUpdateMember","m","handleCloseUpdateMember","handleCancelUpdateMember","openDeleteMember","handleCloseDeleteMember","handleCancelDeleteMember","handelUpdate","handelDelete","AddMember","mName","setMName","mNumber","setMNumber","Dashboard","selectedCircleID","isAddMemberOpen","isAMLoading","isAMUIDisabled","errorAMMsg","handleSelecteCircle","openAddMember","handleCloseAddMember","handleCancelAddMember","handleAddMember","undefined","Object","keys","length","main","title","getItem","Routes","exact","path","showMenu","includes","window","dashboardMenuItem","menuItemContainer","menuItemSelected","dashboardItem","icnContainer","tooltip","data-tooltip","dashboardIcn","currentMenuItems","myProfileItem","myProfileIcn","sidebar","logout","logoutIcon","App","content","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.74b0a941.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"updateButton\":\"Row_updateButton__foLX4\",\"deleteButton\":\"Row_deleteButton__1VNz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__MQOmE\",\"logo\":\"Menu_logo__2Fs8L\",\"menuItemContainer\":\"Menu_menuItemContainer__34ZRI\",\"menuItemSelected\":\"Menu_menuItemSelected__vXjGs\",\"menuItemText\":\"Menu_menuItemText__erFnV\",\"dashboardIcn\":\"Menu_dashboardIcn__2iN_F\",\"sidebar\":\"Menu_sidebar__FvCyc\",\"icnContainer\":\"Menu_icnContainer__3uhIT\",\"myProfileIcn\":\"Menu_myProfileIcn__1c4fB\",\"tooltip\":\"Menu_tooltip__1sk2c\",\"myProfileItem\":\"Menu_myProfileItem__20pja\",\"dashboardItem\":\"Menu_dashboardItem__3jKNM\",\"logout\":\"Menu_logout__2gg1G\",\"logoutIcon\":\"Menu_logoutIcon__2CESw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UpdateMember_header__28aVt\",\"formWrapper\":\"UpdateMember_formWrapper__14u5D\",\"form\":\"UpdateMember_form__CQk1M\",\"formInputWrapper\":\"UpdateMember_formInputWrapper__3xH5v\",\"inputWrapper\":\"UpdateMember_inputWrapper__A8lP4\",\"formInput\":\"UpdateMember_formInput__3tm-Y\",\"submitBtn\":\"UpdateMember_submitBtn__1s0bY\",\"red\":\"UpdateMember_red__G1UOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AddMember_header__1XVUI\",\"formWrapper\":\"AddMember_formWrapper__3g1b5\",\"form\":\"AddMember_form__3lIKb\",\"formInputWrapper\":\"AddMember_formInputWrapper__2n9IA\",\"inputWrapper\":\"AddMember_inputWrapper__1z9DV\",\"formInput\":\"AddMember_formInput__1L3jg\",\"submitBtn\":\"AddMember_submitBtn__151d1\",\"red\":\"AddMember_red__2GmRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"OTP_header__2BZMx\",\"formWrapper\":\"OTP_formWrapper__CuJiV\",\"form\":\"OTP_form__1xx23\",\"formInputWrapper\":\"OTP_formInputWrapper__2U3MY\",\"inputWrapper\":\"OTP_inputWrapper__1HUVJ\",\"formInput\":\"OTP_formInput__nJ-si\",\"submitBtn\":\"OTP_submitBtn__2lgpv\",\"red\":\"OTP_red__eFdIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__LHaDN\",\"rootContent\":\"Login_rootContent__39hoB\",\"logo\":\"Login_logo__1pIbe\",\"formWrapper\":\"Login_formWrapper__2jnrI\",\"form\":\"Login_form__1wxUV\",\"formInputWrapper\":\"Login_formInputWrapper__2IQ3R\",\"inputWrapper\":\"Login_inputWrapper__CjCyD\",\"formInput\":\"Login_formInput__2dBu1\",\"submitBtn\":\"Login_submitBtn__1vDS6\",\"red\":\"Login_red__1IRHr\"};","/**\n * Local storage client for adding and fetching data\n */\n\nexport const getUserToken = () => {\n    return localStorage.getItem('userToken')\n}\n\nexport const setUserToken = userToken => {\n    console.log(`Saving user token to storage... (${userToken})`)\n    localStorage.setItem('userToken', userToken)\n}\n\nexport const removeUserToken = () => {\n    console.log(`Removing user token from storage.`)\n    localStorage.removeItem('userToken')\n}\n\nexport const getUserName = () => {\n    return localStorage.getItem('userName')\n}\n\nexport const isLoggedIn = () => {\n    // TODO validate token with backend\n    if (getUserToken()) {\n        return true\n    }\n\n    return false\n}","export const ROOT_PATH = `/hand-to-hold`\nexport const LOGIN_PATH = `/hand-to-hold/login`\nexport const DASHBOARD_PATH = `/hand-to-hold/dashboard`\nexport const PROFILE_PATH = `/hand-to-hold/profile`\n\n\nexport const isPublicRoute = () => {\n    const publicRoutes = [LOGIN_PATH]\n    return publicRoutes.includes(window.location.pathname)\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\n/**\n * Wraber to check if user has access to the private route\n */\nconst PrivateRoute = ({ component: Component, isAllowed, redirectTo, ...other }) => (\n    <Route\n        {...other}\n        render={props =>\n            isAllowed()\n            ?   <Component {...props} />\n            :   <Redirect to={{ pathname: redirectTo(), state: { from: props.location }, }} />\n        }\n    />\n)\n\nexport default PrivateRoute\n","/**\n * Communicate with Auth API to login and verify OTP\n */\n\nimport axios from 'axios'\n\nconst API_AUTH = `/auth`\n\n/**\n * Login user using 'phone' number\n * @param   {*} phone to login with\n * @returns {success}   obj with 'status' 200 and 'message' with OTP SMS conformation \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /login\n */\nexport const login = async phone => {\n    // const response = await axios.post(LOGIN_ENDPOINT, body)\n    // const data = await response.data\n    // console.log(`Log in request (response): ${JSON.stringify(data, null, 2)}`)\n    // return data\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: 'SMS sent to ********4234' }\n    // return {status: 400, message: 'Can not send to this number!'}\n}\n\n/**\n * Verify 'otp'\n * @param   {*} otp   to verify\n * @returns {success}   obj with 'status' 200 and 'token' \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /otp\n */\nexport const verifyOTP = async otp => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: '', token: 'dsafoiuo-asf-asfd-asf' }\n    // return {status: 400, message: 'wrong opt!'}\n}","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './OTP.module.css'\nimport cs from 'classnames'\n\nconst OTP = props => {\n    const { otp, onChange, open, onClose, onSubmit, onCancel, message, isUIDisabled, isLoading, errorMsg } = props\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '21px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className={cs(styles.header)}>verify OTP</div>\n            <div className=\"mb-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"mt-5 mb-1 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    {message}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <form onSubmit={onSubmit}>\n                                        <div className={cs(styles.formInputWrapper)}>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <div className={styles.inputWrapper}>\n                                                        <input\n                                                            name=\"phone\"\n                                                            type=\"text\"\n                                                            value={otp}\n                                                            onChange={onChange}\n                                                            placeholder={'otp...'}\n                                                            className={styles.formInput}\n                                                            maxLength=\"500\"\n                                                            disabled={isUIDisabled}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"btn-wrapper text-center\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"submit\" className={styles.submitBtn} disabled={isUIDisabled}>\n                                                        <span>\n                                                            {isLoading\n                                                                ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                                : <></>\n                                                            }\n                                                            <span style={{ verticalAlign: 'text-top' }}>verify</span>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"btn-wrapper text-center\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                        <span>\n                                                            <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default OTP","import React, { Component } from 'react'\nimport styles from './Login.module.css'\nimport { withRouter } from 'react-router-dom'\nimport { login, verifyOTP } from '../../api/Auth'\nimport { setUserToken } from '../../storage/local'\nimport cs from 'classnames'\nimport OTP from './otp/OTP'\nimport { DASHBOARD_PATH } from '../../config/routes'\n\nclass Login extends Component {\n    state = {\n        phone: '',\n        otp: '',\n        isUIDisabled: false,\n        isLoading: false,\n        isOTPLoading: false,\n        errorMsg: '',\n        isOTPOpen: false,\n        OTPMsg: '',\n        errorOTPMsg: '',\n    }\n\n    numReg = new RegExp('\\\\d')\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        console.log(this.state.phone)\n        // disable UI and show spanner\n        this.setState({\n            isUIDisabled: true,\n            isLoading: true,\n        })\n        // post to backend to login and send sms (otp)\n        const r = await login(this.state.phone)\n        console.log(r)\n\n        if (r.status === 200) {\n            // show modal to submit otp\n            this.setState({\n                isOTPOpen: true,\n                OTPMsg: r.message,\n                isLoading: false,\n                isUIDisabled: false,\n            })\n            return\n        }\n\n        this.setState({\n            errorMsg: \"Error: \" + r.message,\n            isUIDisabled: false,\n            isLoading: false,\n        })\n    }\n\n    handleChange = (e) => {\n        // TODO: fix insert only numbers\n        if (this.numReg.test(e.target.value)) {\n            this.setState({ phone: e.target.value })\n        }\n    }\n\n    handleOTPChange = (e) => {\n        // TODO: fix insert only numbers\n        if (this.numReg.test(e.target.value)) {\n            this.setState({ otp: e.target.value })\n        }\n    }\n\n    handleVerifyOTP = async e => {\n        e.preventDefault()\n\n        this.setState({\n            isUIDisabled: true,\n            isOTPLoading: true,\n        })\n\n        // post otp to backend\n        const r = await verifyOTP(this.state.otp)\n        console.log(r)\n\n        if (r.status === 200) {\n            // save token\n            setUserToken(r.token)\n            // push user to dashboard\n            this.props.history.push(DASHBOARD_PATH)\n            return\n        }\n\n        this.setState({\n            errorOTPMsg: \"Error: \" + r.message,\n            isUIDisabled: false,\n            isOTPLoading: false,\n        })\n\n    }\n\n    handleCloseOTP = () => {\n        console.log('modale otp closed')\n    }\n\n    handleCancelOTP = () => {\n        this.setState({\n            isUIDisabled: false,\n            isLoading: false,\n            isOTPOpen: false,\n            OTPMsg: '',\n        })\n    }\n\n    render() {\n        return (\n            <div className={cs(styles.root, 'row')}>\n\n                <OTP\n                    open={this.state.isOTPOpen}\n                    onClose={this.handleCloseOTP}\n                    onSubmit={this.handleVerifyOTP}\n                    onCancel={this.handleCancelOTP}\n                    otp={this.state.otp}\n                    onChange={this.handleOTPChange}\n                    message={this.state.OTPMsg}\n                    isUIDisabled={this.state.isUIDisabled}\n                    isLoading={this.state.isOTPLoading}\n                    errorMsg={this.state.errorOTPMsg}\n                />\n\n                <div className={cs('col-lg-6')}>\n\n                    <div className=\"d-flex flex-column h-100\">\n                        <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                        <div className={styles.form}>\n\n                                            <div className=\"my-5 text-center\">\n                                                <div className=\"row\">\n                                                    <div className={cs('col-12', styles.red)}>\n                                                        {this.state.errorMsg === ''\n                                                            ? <></>\n                                                            : <>{this.state.errorMsg}</>\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <form onSubmit={this.handleSubmit}>\n                                                <div className={cs(styles.formInputWrapper)}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12\">\n                                                            <div className={styles.inputWrapper}>\n                                                                <input\n                                                                    name=\"phone\"\n                                                                    type=\"text\"\n                                                                    value={this.state.phone}\n                                                                    onChange={this.handleChange}\n                                                                    placeholder={'phone number...'}\n                                                                    className={styles.formInput}\n                                                                    maxLength=\"500\"\n                                                                    disabled={this.state.isUIDisabled}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"btn-wrapper text-center\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12\">\n                                                            <button type=\"submit\" className={styles.submitBtn} disabled={this.state.isUIDisabled}>\n                                                                <span>\n                                                                    {this.state.isLoading\n                                                                        ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                                        : <></>\n                                                                    }\n                                                                    <span style={{ verticalAlign: 'text-top' }}>log in</span>\n                                                                </span>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={cs(styles.rootContent, 'col-lg-6')}>\n                    <div className=\"d-flex flex-column h-100\">\n                        <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-12\">\n                                    <div className={styles.logo} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login)\n","import React from 'react'\nimport styles from './ListItem.module.css'\nimport cs from 'classnames'\n\nconst ListItem = ({id, name, selected, onSelect }) => {\n\n    return (\n        <div className={selected ? cs(styles.root, styles.selected) : styles.root} onClick={() => onSelect(id)}>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <p className={styles.name}>{name}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ListItem\n","import React, { useState } from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './CreateCircle.module.css'\nimport cs from 'classnames'\n\nconst CreateCircle = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, errorMsg } = props\n\n    const [cName, setCName] = useState('')\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '21px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    const clear = () => {\n        setCName('')\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className={cs(styles.header)}>new circle</div>\n            <div className=\"mb-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"mt-5 mb-1 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <form onSubmit={e => onSubmit(e, cName, clear)}>\n                                        <div className={cs(styles.formInputWrapper)}>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <div className={styles.inputWrapper}>\n                                                        <input\n                                                            name=\"cName\"\n                                                            type=\"text\"\n                                                            value={cName}\n                                                            onChange={(e) => setCName(e.target.value)}\n                                                            placeholder={'circle name...'}\n                                                            className={styles.formInput}\n                                                            maxLength=\"500\"\n                                                            disabled={isUIDisabled}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"btn-wrapper text-center\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"submit\" onClick={e => onSubmit(e, cName, clear)} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                        <span>\n                                                            {isLoading\n                                                                ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                                : <></>\n                                                            }\n                                                            <span style={{ verticalAlign: 'text-top' }}>create</span>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"btn-wrapper text-center\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                        <span>\n                                                            <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default CreateCircle","/**\n * Communicate with Circle API manage circles and members\n */\nimport axios from 'axios'\nimport { getUserToken } from '../storage/local'\n\nconst API_CIRCLE = `/circle`\n\nlet DB = []\n\n/**\n * Fetch all loged in user's circles\n * @returns {success}   obj with 'status' 200 and 'data' array with all circles \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    GET\n * @endpoint /\n */\nexport const fetchAll = async() => {\n    console.log('API -> [circle] fetchAll');\n    // const CIRCLE_ENDPOINT = '/';\n    // const response = await axios.get(API_CIRCLE+CIRCLE_ENDPOINT, { headers: { Authorization: 'Bearer ' + getUserToken() } });\n    // return response;\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: '', data: DB }\n    // return {status: 400, message: '!'}\n}\n\n/**\n * Fetch circle by 'id'\n * @param {*} id    of circle to fetch\n * @returns {success}   obj with 'status' 200 and 'data' with circle \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    GET\n * @endpoint /{id}\n */\nexport const fetch = async(id) => {\n    console.log('API -> [circle] fetch/' + id);\n    let c = DB.filter(i => { return i.id === id })\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: '', data: c[0] }\n    // return {status: 400, message: '!'}\n}\n\n/**\n * Create a 'circle'\n * @param {*} circle\n * @returns {success}   obj with 'status' 200 and 'data' with circle \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /\n */\nexport const create = async(circle) => {\n    console.log('API -> [circle] create/' + JSON.stringify(circle));\n    let randomID = guid()\n    circle.id = randomID\n    circle.members = []\n    DB.push(circle)\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    console.log(circle);\n\n    return { status: 200, message: '', data: circle }\n    // return {status: 400, message: '!'}\n}\n\n/**\n * Add 'member' into 'circle'\n * @param {*} circle    to add into it\n * @param {*} member    to be added\n * @returns {success}   obj with 'status' 200 and 'data' with member \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /{circle.id}/member\n */\nexport const addMember = (circle, member) => {\n    let randomID = guid()\n    member.id = randomID\n    let o = DB.filter(i => { return i.id === circle.id })\n    console.log('got circle from db');\n    console.log(o);\n    o[0].members.push(member)\n    return { status: 200, message: '', data: member }\n}\n\n/**\n * Update 'member' in 'circle'\n * @param {*} circle    of the member\n * @param {*} member    to be updated\n * @returns {success}   obj with 'status' 200 and 'data' with member \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    PUT\n * @endpoint /{circle.id}/member/{member.id}\n */\nexport const updateMember = (circle, member) => {}\n\n/**\n * Delete 'member' from 'circle'\n * @param {*} circle    of the member\n * @param {*} member    to be deleted\n * @returns {success}   obj with 'status' 200 and 'message' \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    DELETE\n * @endpoint /{circle.id}/member/{member.id}\n */\nexport const deleteMember = (circle, member) => {}\n\n/**\n * Generate random id\n * @returns random id string with format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n * @source  https://learnersbucket.com/examples/javascript/unique-id-generator-in-javascript/\n */\nlet guid = () => {\n    let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}","import React, { Component } from 'react'\nimport styles from './List.module.css'\nimport ListItem from '../listItem/ListItem'\nimport CreateCircle from './createCircle/CreateCircle'\nimport cs from 'classnames'\nimport { fetchAll,  create } from '../../../api/Circle'\n\nclass List extends Component {\n\n    state = {\n        circles: [],\n        isCreateCircleOpen: false,\n        isCCLoading: false,\n        isCCUIDisabled: false,\n        errorCCMsg: '',\n    }\n\n    componentDidMount = async () => {\n        console.log(`List -> componentDidMount`)\n        // fetch circle\n        this.reload()\n    }\n\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\n        console.log('List -> componentDidUpdate')\n\n    }\n\n    reload = async () => {\n        const c = await fetchAll()\n        console.log(c)\n\n\n        if (c.status === 200) {\n            this.setState({ circles: c.data })\n            return\n        }\n\n        // TODO: handel error\n        // mabay show reload button?\n    }\n\n    openCreateCircle = () => {\n        this.setState({ isCreateCircleOpen: true })\n    }\n\n    handleCloseCreateCircle = () => {\n        console.log('modale CreateCircle closed')\n    }\n\n    handleCancelCreateCircle = () => {\n        console.log('modale CreateCircle closed')\n        this.setState({ isCreateCircleOpen: false })\n    }\n\n    handleCreateCreateCircle = async (e, name, clear) => {\n        e.preventDefault()\n\n        console.log('handleCreateCreateCircle:')\n        console.log(name)\n\n        if (name === '') {\n            this.setState({\n                errorCCMsg: 'circle name is required!'\n            })\n            \n            return\n        }\n\n        this.setState({\n            isCCLoading: true,\n            isCCUIDisabled: true,\n        })\n\n        let c = await create({name})\n        console.log('this is c')\n        \n        console.log(c)\n        \n        if (c.status === 200) {\n            this.reload()\n            this.setState({ \n                isCreateCircleOpen: false,\n                isCCLoading: false,\n                isCCUIDisabled: false,\n            })\n\n            this.props.onSelect(c.data.id)\n            clear()\n            return\n        }\n\n        // re-get all circles\n        // close modal\n\n        // other?\n        // show error msg\n        // re-open UI and stop loading\n\n        \n    }\n\n    render() {\n\n        return (\n            <div className={cs(styles.root)}>\n\n                <CreateCircle\n                    open={this.state.isCreateCircleOpen}\n                    onClose={this.handleCloseCreateCircle}\n                    onCancel={this.handleCancelCreateCircle}\n                    onSubmit={this.handleCreateCreateCircle}\n                    isLoading={this.state.isCCLoading}\n                    isUIDisabled={this.state.isCCUIDisabled}\n                    errorMsg={this.state.errorCCMsg}\n                />\n\n                <div className={styles.topArea}>\n                    <button className={cs('btn', styles.addButton)} onClick={this.openCreateCircle}><i className=\"fas fa-plus\"></i> new circle</button>\n                </div>\n                <div className={cs(styles.listArea, styles.hasFilter)}>\n                    {this.state.circles.map((c, i) => {\n                        return <ListItem key={i} id={c.id} name={c.name} selected={c.id === this.props.selectedCircle ? true : false} onSelect={this.props.onSelect} />\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default List\n","import React from 'react'\nimport styles from './Row.module.css'\nimport cs from 'classnames'\n\nconst Row = ({ member, onUpdate, onDelete }) => {\n\n    return (\n        <tr>\n            <td>{member.name}</td>\n            <td>{member.number}</td>\n            <td>\n                <button className={cs('btn', 'btn-sm', styles.updateButton, 'mr-2')} onClick={() => onUpdate(member)}><i className=\"fas fa-pen\"></i></button>\n                <button className={cs('btn', 'btn-sm', styles.deleteButton)} onClick={() => onDelete(member)}><i className=\"fas fa-trash\"></i></button>\n            </td>\n        </tr>\n    )\n}\n\n\nexport default Row","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './UpdateMember.module.css'\nimport cs from 'classnames'\n\nconst UpdateMember = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, errorMsg, name, number, OnChangeName, onChangeNumber } = props\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '21px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className={cs(styles.header)}>edit member</div>\n            <div className=\"mb-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"mt-5 mb-1 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"mName\"\n                                                        type=\"text\"\n                                                        value={name}\n                                                        onChange={ e => OnChangeName(e.target.value)}\n                                                        placeholder={'member name...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"mNumber\"\n                                                        type=\"text\"\n                                                        value={number}\n                                                        onChange={ e => onChangeNumber(e.target.value)}\n                                                        placeholder={'member number...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={() => onSubmit()} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>update</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n\n}\n\n\nexport default UpdateMember","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './DeleteMember.module.css'\nimport cs from 'classnames'\n\nconst DeleteMember = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, name, number } = props\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '21px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className={cs(styles.header)}>delete member</div>\n            <div className=\"mb-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"mt-5 mb-1 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12')}>\n                                                are you sure you want to delete <b>{name} ({number})</b> ?\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={() => onSubmit()} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>delete</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n\n}\n\n\nexport default DeleteMember","import React, { Component } from 'react'\nimport styles from './Table.module.css'\nimport Row from './row/Row'\nimport { updateMember, deleteMember } from '../../../api/Circle'\nimport UpdateMember from './updateMember/UpdateMember'\nimport DeleteMember from './deleteMember/DeleteMember'\n\nclass Table extends Component {\n\n    state = {\n        members: [],\n        selectedMember: {},\n        nameToUpdate: '',\n        numberToUpdate: '',\n        isUpdateMemberOpen: false,\n        isUMLoading: false,\n        isUMUIDisabled: false,\n        errorUMMsg: '',\n        isDeleteMemberOpen: false,\n        isDMLoading: false,\n        isDMUIDisabled: false,\n    }\n\n    componentDidMount = () => {\n        console.log(`Table -> componentDidMount`)\n        this.setState({ members: this.props.members })\n\n    }\n\n    componentDidUpdate = async (prevProps, prevState, snapshot) => {\n        console.log(`Table -> componentDidUpdate`)\n\n        if (this.state.members !== this.props.members) {\n            this.setState({ members: this.props.members })\n        }\n    }\n\n    openUpdateMember = m => {\n        console.log('openUpdateMember: ' + JSON.stringify(m));\n        this.setState({\n            selectedMember: m,\n            nameToUpdate: m.name,\n            numberToUpdate: m.number,\n            isUpdateMemberOpen: true\n        })\n    }\n\n    OnChangeName = e => {\n        this.setState({ nameToUpdate: e })\n    }\n\n    onChangeNumber = e => {\n        this.setState({ numberToUpdate: e })\n\n    }\n\n    handleCloseUpdateMember = () => {\n        console.log('modale UpdateMember closed')\n    }\n\n    handleCancelUpdateMember = () => {\n        console.log('modale UpdateMember closed')\n        this.setState({ isUpdateMemberOpen: false })\n    }\n\n    openDeleteMember = m => {\n        this.setState({\n            selectedMember: m,\n            nameToUpdate: m.name,\n            numberToUpdate: m.number,\n            isDeleteMemberOpen: true\n        })\n    }\n\n    handleCloseDeleteMember = () => {\n        console.log('modale handleCloseDeleteMember closed')\n    }\n\n    handleCancelDeleteMember = () => {\n        console.log('modale DeleteMember closed')\n        this.setState({ isDeleteMemberOpen: false })\n    }\n\n    handelUpdate = () => {\n        console.log('handelUpdate: ' + this.state.nameToUpdate + ' ' + this.state.numberToUpdate)\n    }\n\n    handelDelete = m => {\n        console.log('handelDelete: ' + this.state.nameToUpdate + ' ' + this.state.numberToUpdate)\n    }\n\n    render() {\n        const members = this.state.members\n\n        return (\n            <>\n                <UpdateMember\n                    open={this.state.isUpdateMemberOpen}\n                    onClose={this.handleCloseUpdateMember}\n                    onCancel={this.handleCancelUpdateMember}\n                    onSubmit={this.handelUpdate}\n                    isLoading={this.state.isUMLoading}\n                    isUIDisabled={this.state.isUMUIDisabled}\n                    errorMsg={this.state.errorUMMsg}\n                    name={this.state.nameToUpdate}\n                    number={this.state.numberToUpdate}\n                    OnChangeName={this.OnChangeName}\n                    onChangeNumber={this.onChangeNumber}\n                />\n\n                <DeleteMember\n                    open={this.state.isDeleteMemberOpen}\n                    onClose={this.handleCloseDeleteMember}\n                    onCancel={this.handleCancelDeleteMember}\n                    onSubmit={this.handelDelete}\n                    isLoading={this.state.isDMLoading}\n                    isUIDisabled={this.state.isDMUIDisabled}\n                    name={this.state.nameToUpdate}\n                    number={this.state.numberToUpdate}\n                />\n\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>name</th>\n                            <th>number</th>\n                            <th>options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {members.map((m, i) => {\n                            return <Row key={i} member={m} onUpdate={() => this.openUpdateMember(m)} onDelete={() => this.openDeleteMember(m)} />\n                        })}\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n\n}\n\nexport default Table","import React, { useState } from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './AddMember.module.css'\nimport cs from 'classnames'\n\nconst AddMember = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, errorMsg } = props\n    const [mName, setMName] = useState('')\n    const [mNumber, setMNumber] = useState('')\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '21px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    const clear = () => {\n        setMName('')\n        setMNumber('')\n    }\n\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className={cs(styles.header)}>add member</div>\n            <div className=\"mb-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"mt-5 mb-1 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <form onSubmit={e => onSubmit(e, mName, mNumber, clear)}>\n                                        <div className={cs(styles.formInputWrapper)}>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <div className={styles.inputWrapper}>\n                                                        <input\n                                                            name=\"mName\"\n                                                            type=\"text\"\n                                                            value={mName}\n                                                            onChange={(e) => setMName(e.target.value)}\n                                                            placeholder={'member name...'}\n                                                            className={styles.formInput}\n                                                            maxLength=\"500\"\n                                                            disabled={isUIDisabled}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className={cs(styles.formInputWrapper)}>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <div className={styles.inputWrapper}>\n                                                        <input\n                                                            name=\"mNumber\"\n                                                            type=\"text\"\n                                                            value={mNumber}\n                                                            onChange={(e) => setMNumber(e.target.value)}\n                                                            placeholder={'member number...'}\n                                                            className={styles.formInput}\n                                                            maxLength=\"500\"\n                                                            disabled={isUIDisabled}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"btn-wrapper text-center\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"submit\" onClick={e => onSubmit(e, mName, mNumber, clear)} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                        <span>\n                                                            {isLoading\n                                                                ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                                : <></>\n                                                            }\n                                                            <span style={{ verticalAlign: 'text-top' }}>add</span>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"btn-wrapper text-center\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                        <span>\n                                                            <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n\n}\n\n\nexport default AddMember","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styles from './Dashboard.module.css'\nimport List from './list/List'\nimport Table from './table/Table'\nimport { fetch, addMember } from '../../api/Circle'\nimport AddMember from './addMember/AddMember'\nimport cs from 'classnames'\n\nclass Dashboard extends Component {\n\n    state = {\n        selectedCircleID: '',\n        circle: {members: []},\n        isAddMemberOpen: false,\n        isAMLoading: false,\n        isAMUIDisabled: false,\n        errorAMMsg: '',\n    }\n\n    componentDidMount = async () => {\n        console.log(`Dashboard -> componentDidMount`)\n    }\n\n    componentDidUpdate = async (prevProps, prevState, snapshot) => {\n        console.log(`Dashboard -> componentDidUpdate`)\n        console.log(this.state.circle)\n    }\n\n    handleSelecteCircle = async (id) => {\n        console.log('handleSelecteCircle: ' + id)\n        this.setState({ selectedCircleID: id })\n\n        // fetch circle data\n        let c = await fetch(id)\n\n        if (c.status === 200) {\n            this.setState({ circle: c.data })\n        }\n\n        // TODO: handle error\n\n    }\n\n    openAddMember = () => {\n        this.setState({isAddMemberOpen: true})\n    }\n\n    handleCloseAddMember = () => {\n        console.log('modale AddMember closed')\n    }\n\n    handleCancelAddMember = () => {\n        console.log('modale AddMember closed')\n        this.setState({ isAddMemberOpen: false })\n    }\n\n    handleAddMember = async (e, name, number, clear) => {\n        e.preventDefault()\n        \n        console.log('handleAddMember:')\n        console.log(name)\n        console.log(number)\n\n        this.setState({\n            isAMLoading: true,\n            isAMUIDisabled: true,\n        })\n\n        let c = await addMember(this.state.circle, {name, number})\n        console.log('this is c')\n        console.log(c);\n        \n\n        this.setState({ \n            isAddMemberOpen: false,\n            isAMLoading: false,\n            isAMUIDisabled: false,\n         })\n\n         clear()\n        \n    }\n\n    render() {\n        const c = this.state.circle\n\n        return (\n            <div className={styles.root}>\n                <AddMember\n                    open={this.state.isAddMemberOpen}\n                    onClose={this.handleCloseAddMember}\n                    onCancel={this.handleCancelAddMember}\n                    onSubmit={this.handleAddMember}\n                    isLoading={this.state.isAMLoading}\n                    isUIDisabled={this.state.isAMUIDisabled}\n                    errorMsg={this.state.errorAMMsg}\n                />\n\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div className='isOpen'>\n                            <div>\n                                <List selectedCircle={this.state.selectedCircleID} onSelect={this.handleSelecteCircle} />\n                            </div>\n                        </div>\n\n                        <div className={'openSideMenu'}>\n                            \n                            { this.state.circle === undefined || Object.keys(this.state.circle).length === 1 \n                                ? <></>\n                                : <main>\n                                    <div className=\"row\">\n                                        <div className={styles.main}>\n                                            <h3 className={styles.title}>{c.name}</h3>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <button className={cs('btn', styles.addButton, 'mb-3')} onClick={this.openAddMember}><i className=\"fas fa-plus\"></i> add member</button>\n                                    </div>\n                                    <div className=\"row\">\n                                        {this.state.circle.members.length === 0\n                                            ? <></>\n                                            : <Table members={this.state.circle.members}/>\n                                        }\n                                    </div>\n                                </main>\n                            }\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Dashboard)\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { isLoggedIn } from './storage/local';\nimport { LOGIN_PATH, DASHBOARD_PATH, ROOT_PATH } from './config/routes';\nimport PrivateRoute from './components/privateRoute/PrivateRoute';\nimport Login from './routes/login/Login';\nimport Dashboard from './routes/dashboard/Dashboard';\n\nconst isAllowed = isLoggedIn\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path={ROOT_PATH} render={() => <Redirect to={LOGIN_PATH} />} />\n        <Route exact path={LOGIN_PATH} component={Login} />\n        <PrivateRoute path={DASHBOARD_PATH} component={Dashboard} isAllowed={isAllowed} redirectTo={() => LOGIN_PATH} />\n    </Switch>\n);\n\nexport default Routes;\n","import React from 'react'\nimport { DASHBOARD_PATH, isPublicRoute, LOGIN_PATH, PROFILE_PATH } from '../../config/routes'\nimport { Link, withRouter } from 'react-router-dom'\nimport styles from '../menu/Menu.module.css'\nimport cs from 'classnames'\n\nconst Menu = props => {\n    let showMenu = !isPublicRoute()\n\n    const logout = () => {\n        props.history.push(LOGIN_PATH)\n    }\n\n    const dashboardMenuItem = (\n        <div key=\"dashboardMenuItem\" className=\"row\">\n            <div className=\"col\">\n                <div className={styles.menuItemContainer}>\n                    <Link\n                        to={DASHBOARD_PATH}\n                        className={DASHBOARD_PATH === window.location.pathname ? cs(styles.menuItemContainer, styles.menuItemSelected) : styles.menuItemContainer}\n                    >\n                        <div className={cs(styles.dashboardItem, styles.icnContainer, styles.tooltip)} data-tooltip=\"dashboard\">\n                            <span className={styles.dashboardIcn} />\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n\n    const profileMenuItem = (\n        <div key=\"myProfileMenuItem\" className=\"row\">\n            <div className=\"col\">\n                <div className={styles.menuItemContainer}>\n                    <Link\n                        to={PROFILE_PATH}\n                        className={\n                            PROFILE_PATH === window.location.pathname\n                                ? cs(styles.menuItemContainer, styles.menuItemSelected)\n                                : styles.menuItemContainer\n                        }\n                    >\n                        <div className={cs(styles.myProfileItem, styles.icnContainer, styles.tooltip)} data-tooltip=\"my Profile\">\n                            <span className={styles.myProfileIcn} />\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n\n\n    let currentMenuItems = [dashboardMenuItem]\n\n    return showMenu\n    ?   <header className={styles.root}>\n            <div className={styles.sidebar}>\n                <div className=\"d-flex flex-column h-100\">\n                    <div className={styles.logo} />\n                    <div className=\"d-flex flex-column justify-content-center flex-grow-1\">{currentMenuItems}</div>\n                    <div className={styles.logout} onClick={logout}>\n                        <span className={styles.logoutIcon} />\n                    </div>\n                </div>\n            </div>\n        </header>\n    :   <></>\n    \n}\n\nexport default withRouter(Menu)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Routes from './Routes'\nimport styles from './App.module.css'\nimport Menu from './components/menu/Menu'\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className={styles.root}>\n                    <div className={styles.content}>\n                        <Menu />\n                        <Routes />\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n/**\n * Remove console output in prod\n */\nif (process.env.REACT_APP_STAGE === 'prod') {\n    console.log = () => {};\n}\n\nReactDOM.render( < App / > , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"CreateCircle_header__3dzw0\",\"formWrapper\":\"CreateCircle_formWrapper__1kut5\",\"form\":\"CreateCircle_form__3Sqqj\",\"formInputWrapper\":\"CreateCircle_formInputWrapper__OnM_j\",\"inputWrapper\":\"CreateCircle_inputWrapper___BPcW\",\"formInput\":\"CreateCircle_formInput__1L6FB\",\"submitBtn\":\"CreateCircle_submitBtn__1wjtp\",\"red\":\"CreateCircle_red__12AZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"List_root__19v1S\",\"topArea\":\"List_topArea__2dmRB\",\"addButton\":\"List_addButton__1xN4k\",\"listArea\":\"List_listArea__p5llO\",\"hasFilter\":\"List_hasFilter__2mv_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DeleteMember_header__3Ox1V\",\"formWrapper\":\"DeleteMember_formWrapper__2rxVB\",\"form\":\"DeleteMember_form__3tLzk\",\"formInputWrapper\":\"DeleteMember_formInputWrapper__26FuR\",\"inputWrapper\":\"DeleteMember_inputWrapper__kAn3E\",\"formInput\":\"DeleteMember_formInput__iZAv6\",\"submitBtn\":\"DeleteMember_submitBtn__3W-Wk\",\"red\":\"DeleteMember_red__1Qiqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__Ty3kB\",\"main\":\"Dashboard_main__3MjOW\",\"bold\":\"Dashboard_bold__1QPLZ\",\"link\":\"Dashboard_link__6V9CU\",\"title\":\"Dashboard_title__3bcoI\",\"addButton\":\"Dashboard_addButton__3iwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListItem_root__2U6UX\",\"name\":\"ListItem_name__2Fn-B\",\"selected\":\"ListItem_selected__3F9-b\"};"],"sourceRoot":""}