{"version":3,"sources":["routes/dashboard/table/row/Row.module.css","App.module.css","components/menu/Menu.module.css","routes/dashboard/table/updateMember/UpdateMember.module.css","routes/dashboard/addMember/AddMember.module.css","routes/login/Login.module.css","routes/login/otp/OTP.module.css","storage/local.js","config/routes.js","components/privateRoute/PrivateRoute.jsx","api/Auth.js","routes/login/otp/OTP.jsx","routes/login/Login.jsx","routes/dashboard/listItem/ListItem.jsx","routes/dashboard/list/createCircle/CreateCircle.jsx","api/Circle.js","routes/dashboard/list/List.jsx","routes/dashboard/table/row/Row.jsx","routes/dashboard/table/updateMember/UpdateMember.jsx","routes/dashboard/table/deleteMember/DeleteMember.jsx","routes/dashboard/table/Table.jsx","routes/dashboard/addMember/AddMember.jsx","routes/dashboard/Dashboard.jsx","Routes.jsx","components/menu/Menu.jsx","App.jsx","serviceWorker.js","index.js","routes/dashboard/list/createCircle/CreateCircle.module.css","routes/dashboard/list/List.module.css","routes/dashboard/Dashboard.module.css","routes/dashboard/listItem/ListItem.module.css","routes/dashboard/table/deleteMember/DeleteMember.module.css"],"names":["module","exports","setUserToken","userToken","console","log","localStorage","setItem","LOGIN_PATH","DASHBOARD_PATH","PrivateRoute","Component","component","isAllowed","redirectTo","other","render","props","to","pathname","state","from","location","login","phone","a","Promise","resolve","setTimeout","status","message","verifyOTP","otp","token","OTP","onChange","open","onClose","onSubmit","onCancel","isUIDisabled","isLoading","errorMsg","center","styles","modal","background","padding","borderRadius","maxWidth","width","minHeight","closeButton","display","className","cs","formWrapper","form","red","formInputWrapper","inputWrapper","name","type","value","placeholder","formInput","maxLength","disabled","onClick","submitBtn","role","aria-hidden","style","verticalAlign","Login","isOTPLoading","isOTPOpen","OTPMsg","errorOTPMsg","numReg","RegExp","handleSubmit","setState","r","handleChange","e","test","target","handleOTPChange","handleVerifyOTP","history","push","handleCloseOTP","handleCancelOTP","root","this","rootContent","logo","withRouter","ListItem","id","selected","onSelect","CreateCircle","useState","cName","setCName","clear","DB","fetchAll","data","fetch","c","filter","i","create","circle","JSON","stringify","randomID","guid","members","addMember","member","o","s4","Math","floor","random","toString","substring","List","circles","isCreateCircleOpen","isCCLoading","isCCUIDisabled","errorCCMsg","componentDidMount","reload","componentDidUpdate","prevProps","prevState","snapshot","openCreateCircle","handleCloseCreateCircle","handleCancelCreateCircle","handleCreateCreateCircle","topArea","addButton","listArea","hasFilter","map","key","selectedCircle","Row","onUpdate","onDelete","number","updateButton","deleteButton","UpdateMember","OnChangeName","onChangeNumber","DeleteMember","Table","selectedMember","nameToUpdate","numberToUpdate","isUpdateMemberOpen","isUMLoading","isUMUIDisabled","errorUMMsg","isDeleteMemberOpen","isDMLoading","isDMUIDisabled","openUpdateMember","m","handleCloseUpdateMember","handleCancelUpdateMember","openDeleteMember","handleCloseDeleteMember","handleCancelDeleteMember","handelUpdate","handelDelete","AddMember","mName","setMName","mNumber","setMNumber","Dashboard","selectedCircleID","isAddMemberOpen","isAMLoading","isAMUIDisabled","errorAMMsg","handleSelecteCircle","openAddMember","handleCloseAddMember","handleCancelAddMember","handleAddMember","undefined","Object","keys","length","main","title","getItem","Routes","exact","path","showMenu","includes","window","currentMenuItems","menuItemContainer","menuItemSelected","dashboardItem","icnContainer","tooltip","data-tooltip","dashboardIcn","myProfileItem","myProfileIcn","sidebar","logout","logoutIcon","App","content","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e26e4f93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"updateButton\":\"Row_updateButton__foLX4\",\"deleteButton\":\"Row_deleteButton__1VNz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__MQOmE\",\"logo\":\"Menu_logo__2Fs8L\",\"menuItemContainer\":\"Menu_menuItemContainer__34ZRI\",\"menuItemSelected\":\"Menu_menuItemSelected__vXjGs\",\"menuItemText\":\"Menu_menuItemText__erFnV\",\"dashboardIcn\":\"Menu_dashboardIcn__2iN_F\",\"sidebar\":\"Menu_sidebar__FvCyc\",\"icnContainer\":\"Menu_icnContainer__3uhIT\",\"myProfileIcn\":\"Menu_myProfileIcn__1c4fB\",\"tooltip\":\"Menu_tooltip__1sk2c\",\"myProfileItem\":\"Menu_myProfileItem__20pja\",\"dashboardItem\":\"Menu_dashboardItem__3jKNM\",\"logout\":\"Menu_logout__2gg1G\",\"logoutIcon\":\"Menu_logoutIcon__2CESw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"UpdateMember_formWrapper__14u5D\",\"form\":\"UpdateMember_form__CQk1M\",\"formInputWrapper\":\"UpdateMember_formInputWrapper__3xH5v\",\"inputWrapper\":\"UpdateMember_inputWrapper__A8lP4\",\"formInput\":\"UpdateMember_formInput__3tm-Y\",\"submitBtn\":\"UpdateMember_submitBtn__1s0bY\",\"red\":\"UpdateMember_red__G1UOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"AddMember_formWrapper__3g1b5\",\"form\":\"AddMember_form__3lIKb\",\"formInputWrapper\":\"AddMember_formInputWrapper__2n9IA\",\"inputWrapper\":\"AddMember_inputWrapper__1z9DV\",\"formInput\":\"AddMember_formInput__1L3jg\",\"submitBtn\":\"AddMember_submitBtn__151d1\",\"red\":\"AddMember_red__2GmRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__LHaDN\",\"rootContent\":\"Login_rootContent__39hoB\",\"logo\":\"Login_logo__1pIbe\",\"formWrapper\":\"Login_formWrapper__2jnrI\",\"form\":\"Login_form__1wxUV\",\"formInputWrapper\":\"Login_formInputWrapper__2IQ3R\",\"inputWrapper\":\"Login_inputWrapper__CjCyD\",\"formInput\":\"Login_formInput__2dBu1\",\"submitBtn\":\"Login_submitBtn__1vDS6\",\"red\":\"Login_red__1IRHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"OTP_formWrapper__CuJiV\",\"form\":\"OTP_form__1xx23\",\"formInputWrapper\":\"OTP_formInputWrapper__2U3MY\",\"inputWrapper\":\"OTP_inputWrapper__1HUVJ\",\"formInput\":\"OTP_formInput__nJ-si\",\"submitBtn\":\"OTP_submitBtn__2lgpv\",\"red\":\"OTP_red__eFdIs\"};","/**\n * Local storage client for adding and fetching data\n */\n\nexport const getUserToken = () => {\n    return localStorage.getItem('userToken')\n}\n\nexport const setUserToken = userToken => {\n    console.log(`Saving user token to storage... (${userToken})`)\n    localStorage.setItem('userToken', userToken)\n}\n\nexport const removeUserToken = () => {\n    console.log(`Removing user token from storage.`)\n    localStorage.removeItem('userToken')\n}\n\nexport const getUserName = () => {\n    return localStorage.getItem('userName')\n}\n\nexport const isLoggedIn = () => {\n    // TODO validate token with backend\n    if (getUserToken()) {\n        return true\n    }\n\n    return false\n}","export const ROOT_PATH = `/hand-to-hold`\nexport const LOGIN_PATH = `/hand-to-hold/login`\nexport const DASHBOARD_PATH = `/hand-to-haold/dashboard`\nexport const PROFILE_PATH = `/hand-to-hold/profile`\n\n\nexport const isPublicRoute = () => {\n    const publicRoutes = [LOGIN_PATH]\n    return publicRoutes.includes(window.location.pathname)\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\n/**\n * Wraber to check if user has access to the private route\n */\nconst PrivateRoute = ({ component: Component, isAllowed, redirectTo, ...other }) => (\n    <Route\n        {...other}\n        render={props =>\n            isAllowed()\n            ?   <Component {...props} />\n            :   <Redirect to={{ pathname: redirectTo(), state: { from: props.location }, }} />\n        }\n    />\n)\n\nexport default PrivateRoute\n","/**\n * Communicate with Auth API to login and verify OTP\n */\n\nimport axios from 'axios'\n\nconst API_AUTH = `/auth`\n\n/**\n * Login user using 'phone' number\n * @param   {*} phone to login with\n * @returns {success}   obj with 'status' 200 and 'message' with OTP SMS conformation \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /login\n */\nexport const login = async phone => {\n    // const response = await axios.post(LOGIN_ENDPOINT, body)\n    // const data = await response.data\n    // console.log(`Log in request (response): ${JSON.stringify(data, null, 2)}`)\n    // return data\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: 'SMS sent to ********4234' }\n    // return {status: 400, message: 'Can not send to this number!'}\n}\n\n/**\n * Verify 'otp'\n * @param   {*} otp   to verify\n * @returns {success}   obj with 'status' 200 and 'token' \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /otp\n */\nexport const verifyOTP = async otp => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: '', token: 'dsafoiuo-asf-asfd-asf' }\n    // return {status: 400, message: 'wrong opt!'}\n}","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './OTP.module.css'\nimport cs from 'classnames'\n\nconst OTP = props => {\n    const { otp, onChange, open, onClose, onSubmit, onCancel, message, isUIDisabled, isLoading, errorMsg } = props\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '10px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className=\"my-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"my-5 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    {message}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"phone\"\n                                                        type=\"text\"\n                                                        value={otp}\n                                                        onChange={onChange}\n                                                        placeholder={'otp...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onSubmit} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>verify</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default OTP","import React, { Component } from 'react'\nimport styles from './Login.module.css'\nimport { withRouter } from 'react-router-dom'\nimport { login, verifyOTP } from '../../api/Auth'\nimport { setUserToken } from '../../storage/local'\nimport cs from 'classnames'\nimport OTP from './otp/OTP'\nimport { DASHBOARD_PATH } from '../../config/routes'\n\nclass Login extends Component {\n    state = {\n        phone: '',\n        otp: '',\n        isUIDisabled: false,\n        isLoading: false,\n        isOTPLoading: false,\n        errorMsg: '',\n        isOTPOpen: false,\n        OTPMsg: '',\n        errorOTPMsg: '',\n    }\n\n    numReg = new RegExp('\\\\d')\n\n    handleSubmit = async () => {\n        console.log(this.state.phone)\n        // disable UI and show spanner\n        this.setState({\n            isUIDisabled: true,\n            isLoading: true,\n        })\n        // post to backend to login and send sms (otp)\n        const r = await login(this.state.phone)\n        console.log(r)\n\n        if (r.status === 200) {\n            // show modal to submit otp\n            this.setState({\n                isOTPOpen: true,\n                OTPMsg: r.message,\n                isLoading: false,\n                isUIDisabled: false,\n            })\n            return\n        }\n\n        this.setState({\n            errorMsg: \"Error: \" + r.message,\n            isUIDisabled: false,\n            isLoading: false,\n        })\n    }\n\n    handleChange = (e) => {\n        // TODO: fix insert only numbers\n        if (this.numReg.test(e.target.value)) {\n            this.setState({ phone: e.target.value })\n        }\n    }\n\n    handleOTPChange = (e) => {\n        // TODO: fix insert only numbers\n        if (this.numReg.test(e.target.value)) {\n            this.setState({ otp: e.target.value })\n        }\n    }\n\n    handleVerifyOTP = async () => {\n\n        this.setState({\n            isUIDisabled: true,\n            isOTPLoading: true,\n        })\n\n        // post otp to backend\n        const r = await verifyOTP(this.state.otp)\n        console.log(r)\n\n        if (r.status === 200) {\n            // save token\n            setUserToken(r.token)\n            // push user to dashboard\n            this.props.history.push(DASHBOARD_PATH)\n            return\n        }\n\n        this.setState({\n            errorOTPMsg: \"Error: \" + r.message,\n            isUIDisabled: false,\n            isOTPLoading: false,\n        })\n\n    }\n\n    handleCloseOTP = () => {\n        console.log('modale otp closed')\n    }\n\n    handleCancelOTP = () => {\n        this.setState({\n            isUIDisabled: false,\n            isLoading: false,\n            isOTPOpen: false,\n            OTPMsg: '',\n        })\n    }\n\n    render() {\n        return (\n            <div className={cs(styles.root, 'row')}>\n\n                <OTP\n                    open={this.state.isOTPOpen}\n                    onClose={this.handleCloseOTP}\n                    onSubmit={this.handleVerifyOTP}\n                    onCancel={this.handleCancelOTP}\n                    otp={this.state.otp}\n                    onChange={this.handleOTPChange}\n                    message={this.state.OTPMsg}\n                    isUIDisabled={this.state.isUIDisabled}\n                    isLoading={this.state.isOTPLoading}\n                    errorMsg={this.state.errorOTPMsg}\n                />\n\n                <div className={cs('col-lg-6')}>\n\n                    <div className=\"d-flex flex-column h-100\">\n                        <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                        <div className={styles.form}>\n\n                                            <div className=\"my-5 text-center\">\n                                                <div className=\"row\">\n                                                    <div className={cs('col-12', styles.red)}>\n                                                        {this.state.errorMsg === ''\n                                                            ? <></>\n                                                            : <>{this.state.errorMsg}</>\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n                                            <div className={cs(styles.formInputWrapper)}>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <div className={styles.inputWrapper}>\n                                                            <input\n                                                                name=\"phone\"\n                                                                type=\"text\"\n                                                                value={this.state.phone}\n                                                                onChange={this.handleChange}\n                                                                placeholder={'phone number...'}\n                                                                className={styles.formInput}\n                                                                maxLength=\"500\"\n                                                                disabled={this.state.isUIDisabled}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"btn-wrapper text-center\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <button type=\"submit\" onClick={this.handleSubmit} className={styles.submitBtn} disabled={this.state.isUIDisabled}>\n                                                            <span>\n                                                                {this.state.isLoading\n                                                                    ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                                    : <></>\n                                                                }\n                                                                <span style={{ verticalAlign: 'text-top' }}>log in</span>\n                                                            </span>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={cs(styles.rootContent, 'col-lg-6')}>\n                    <div className=\"d-flex flex-column h-100\">\n                        <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-12\">\n                                    <div className={styles.logo} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login)\n","import React from 'react'\nimport styles from './ListItem.module.css'\nimport cs from 'classnames'\n\nconst ListItem = ({id, name, selected, onSelect }) => {\n\n    return (\n        <div className={selected ? cs(styles.root, styles.selected) : styles.root} onClick={() => onSelect(id)}>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <p className={styles.name}>{name}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ListItem\n","import React, { useState } from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './CreateCircle.module.css'\nimport cs from 'classnames'\n\nconst CreateCircle = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, errorMsg } = props\n\n    const [cName, setCName] = useState('')\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '10px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    const clear = () => {\n        setCName('')\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className=\"my-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"my-5 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"cName\"\n                                                        type=\"text\"\n                                                        value={cName}\n                                                        onChange={(e)=> setCName(e.target.value)}\n                                                        placeholder={'circle name...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={() => onSubmit(cName, clear)} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>create</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default CreateCircle","/**\n * Communicate with Circle API manage circles and members\n */\nimport axios from 'axios'\nimport { getUserToken } from '../storage/local'\n\nconst API_CIRCLE = `/circle`\n\nlet DB = []\n\n/**\n * Fetch all loged in user's circles\n * @returns {success}   obj with 'status' 200 and 'data' array with all circles \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    GET\n * @endpoint /\n */\nexport const fetchAll = async() => {\n    console.log('API -> [circle] fetchAll');\n    // const CIRCLE_ENDPOINT = '/';\n    // const response = await axios.get(API_CIRCLE+CIRCLE_ENDPOINT, { headers: { Authorization: 'Bearer ' + getUserToken() } });\n    // return response;\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: '', data: DB }\n    // return {status: 400, message: '!'}\n}\n\n/**\n * Fetch circle by 'id'\n * @param {*} id    of circle to fetch\n * @returns {success}   obj with 'status' 200 and 'data' with circle \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    GET\n * @endpoint /{id}\n */\nexport const fetch = async(id) => {\n    console.log('API -> [circle] fetch/' + id);\n    let c = DB.filter(i => { return i.id === id })\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return { status: 200, message: '', data: c[0] }\n    // return {status: 400, message: '!'}\n}\n\n/**\n * Create a 'circle'\n * @param {*} circle\n * @returns {success}   obj with 'status' 200 and 'data' with circle \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /\n */\nexport const create = async(circle) => {\n    console.log('API -> [circle] create/' + JSON.stringify(circle));\n    let randomID = guid()\n    circle.id = randomID\n    circle.members = []\n    DB.push(circle)\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    console.log(circle);\n\n    return { status: 200, message: '', data: circle }\n    // return {status: 400, message: '!'}\n}\n\n/**\n * Add 'member' into 'circle'\n * @param {*} circle    to add into it\n * @param {*} member    to be added\n * @returns {success}   obj with 'status' 200 and 'data' with member \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    POST\n * @endpoint /{circle.id}/member\n */\nexport const addMember = (circle, member) => {\n    let randomID = guid()\n    member.id = randomID\n    let o = DB.filter(i => { return i.id === circle.id })\n    console.log('got circle from db');\n    console.log(o);\n    o[0].members.push(member)\n    return { status: 200, message: '', data: member }\n}\n\n/**\n * Update 'member' in 'circle'\n * @param {*} circle    of the member\n * @param {*} member    to be updated\n * @returns {success}   obj with 'status' 200 and 'data' with member \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    PUT\n * @endpoint /{circle.id}/member/{member.id}\n */\nexport const updateMember = (circle, member) => {}\n\n/**\n * Delete 'member' from 'circle'\n * @param {*} circle    of the member\n * @param {*} member    to be deleted\n * @returns {success}   obj with 'status' 200 and 'message' \n * @returns {fail}      obj with 'status' 400 and error 'message'\n * @http    DELETE\n * @endpoint /{circle.id}/member/{member.id}\n */\nexport const deleteMember = (circle, member) => {}\n\n/**\n * Generate random id\n * @returns random id string with format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n * @source  https://learnersbucket.com/examples/javascript/unique-id-generator-in-javascript/\n */\nlet guid = () => {\n    let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}","import React, { Component } from 'react'\nimport styles from './List.module.css'\nimport ListItem from '../listItem/ListItem'\nimport CreateCircle from './createCircle/CreateCircle'\nimport cs from 'classnames'\nimport { fetchAll,  create } from '../../../api/Circle'\n\nclass List extends Component {\n\n    state = {\n        circles: [],\n        isCreateCircleOpen: false,\n        isCCLoading: false,\n        isCCUIDisabled: false,\n        errorCCMsg: '',\n    }\n\n    componentDidMount = async () => {\n        console.log(`List -> componentDidMount`)\n        // fetch circle\n        this.reload()\n    }\n\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\n        console.log('List -> componentDidUpdate')\n\n    }\n\n    reload = async () => {\n        const c = await fetchAll()\n        console.log(c)\n\n\n        if (c.status === 200) {\n            this.setState({ circles: c.data })\n            return\n        }\n\n        // TODO: handel error\n        // mabay show reload button?\n    }\n\n    openCreateCircle = () => {\n        this.setState({ isCreateCircleOpen: true })\n    }\n\n    handleCloseCreateCircle = () => {\n        console.log('modale CreateCircle closed')\n    }\n\n    handleCancelCreateCircle = () => {\n        console.log('modale CreateCircle closed')\n        this.setState({ isCreateCircleOpen: false })\n    }\n\n    handleCreateCreateCircle = async (name, clear) => {\n        console.log('handleCreateCreateCircle:')\n        console.log(name)\n\n        if (name === '') {\n            this.setState({\n                errorCCMsg: 'circle name is required!'\n            })\n            \n            return\n        }\n\n        this.setState({\n            isCCLoading: true,\n            isCCUIDisabled: true,\n        })\n\n        let c = await create({name})\n        console.log('this is c')\n        \n        console.log(c)\n        \n        if (c.status === 200) {\n            this.reload()\n            this.setState({ \n                isCreateCircleOpen: false,\n                isCCLoading: false,\n                isCCUIDisabled: false,\n            })\n\n            this.props.onSelect(c.data.id)\n            clear()\n            return\n        }\n\n        // re-get all circles\n        // close modal\n\n        // other?\n        // show error msg\n        // re-open UI and stop loading\n\n        \n    }\n\n    render() {\n\n        return (\n            <div className={cs(styles.root)}>\n\n                <CreateCircle\n                    open={this.state.isCreateCircleOpen}\n                    onClose={this.handleCloseCreateCircle}\n                    onCancel={this.handleCancelCreateCircle}\n                    onSubmit={this.handleCreateCreateCircle}\n                    isLoading={this.state.isCCLoading}\n                    isUIDisabled={this.state.isCCUIDisabled}\n                    errorMsg={this.state.errorCCMsg}\n                />\n\n                <div className={styles.topArea}>\n                    <button className={cs('btn', styles.addButton)} onClick={this.openCreateCircle}><i className=\"fas fa-plus\"></i> new circle</button>\n                </div>\n                <div className={cs(styles.listArea, styles.hasFilter)}>\n                    {this.state.circles.map((c, i) => {\n                        return <ListItem key={i} id={c.id} name={c.name} selected={c.id === this.props.selectedCircle ? true : false} onSelect={this.props.onSelect} />\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default List\n","import React from 'react'\nimport styles from './Row.module.css'\nimport cs from 'classnames'\n\nconst Row = ({ member, onUpdate, onDelete }) => {\n\n    return (\n        <tr>\n            <td>{member.name}</td>\n            <td>{member.number}</td>\n            <td>\n                <button className={cs('btn', 'btn-sm', styles.updateButton, 'mr-2')} onClick={() => onUpdate(member)}><i className=\"fas fa-pen\"></i></button>\n                <button className={cs('btn', 'btn-sm', styles.deleteButton)} onClick={() => onDelete(member)}><i className=\"fas fa-trash\"></i></button>\n            </td>\n        </tr>\n    )\n}\n\n\nexport default Row","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './UpdateMember.module.css'\nimport cs from 'classnames'\n\nconst UpdateMember = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, errorMsg, name, number, OnChangeName, onChangeNumber } = props\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '10px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className=\"my-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"my-5 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"mName\"\n                                                        type=\"text\"\n                                                        value={name}\n                                                        onChange={ e => OnChangeName(e.target.value)}\n                                                        placeholder={'member name...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"mNumber\"\n                                                        type=\"text\"\n                                                        value={number}\n                                                        onChange={ e => onChangeNumber(e.target.value)}\n                                                        placeholder={'member number...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={() => onSubmit()} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>update</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n\n}\n\n\nexport default UpdateMember","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './DeleteMember.module.css'\nimport cs from 'classnames'\n\nconst DeleteMember = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, name, number } = props\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '10px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className=\"my-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"my-5 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12')}>\n                                               are you sure you want to delete <b>{name} ({number})</b> ?\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={() => onSubmit()} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>delete</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n\n}\n\n\nexport default DeleteMember","import React, { Component } from 'react'\nimport styles from './Table.module.css'\nimport Row from './row/Row'\nimport { updateMember, deleteMember } from '../../../api/Circle'\nimport UpdateMember from './updateMember/UpdateMember'\nimport DeleteMember from './deleteMember/DeleteMember'\n\nclass Table extends Component {\n\n    state = {\n        members: [],\n        selectedMember: {},\n        nameToUpdate: '',\n        numberToUpdate: '',\n        isUpdateMemberOpen: false,\n        isUMLoading: false,\n        isUMUIDisabled: false,\n        errorUMMsg: '',\n        isDeleteMemberOpen: false,\n        isDMLoading: false,\n        isDMUIDisabled: false,\n    }\n\n    componentDidMount = () => {\n        console.log(`Table -> componentDidMount`)\n        this.setState({ members: this.props.members })\n\n    }\n\n    componentDidUpdate = async (prevProps, prevState, snapshot) => {\n        console.log(`Table -> componentDidUpdate`)\n\n        if (this.state.members !== this.props.members) {\n            this.setState({ members: this.props.members })\n        }\n    }\n\n    openUpdateMember = m => {\n        console.log('openUpdateMember: ' + JSON.stringify(m));\n        this.setState({\n            selectedMember: m,\n            nameToUpdate: m.name,\n            numberToUpdate: m.number,\n            isUpdateMemberOpen: true\n        })\n    }\n\n    OnChangeName = e => {\n        this.setState({ nameToUpdate: e })\n    }\n\n    onChangeNumber = e => {\n        this.setState({ numberToUpdate: e })\n\n    }\n\n    handleCloseUpdateMember = () => {\n        console.log('modale UpdateMember closed')\n    }\n\n    handleCancelUpdateMember = () => {\n        console.log('modale UpdateMember closed')\n        this.setState({ isUpdateMemberOpen: false })\n    }\n\n    openDeleteMember = m => {\n        this.setState({\n            selectedMember: m,\n            nameToUpdate: m.name,\n            numberToUpdate: m.number,\n            isDeleteMemberOpen: true\n        })\n    }\n\n    handleCloseDeleteMember = () => {\n        console.log('modale handleCloseDeleteMember closed')\n    }\n\n    handleCancelDeleteMember = () => {\n        console.log('modale DeleteMember closed')\n        this.setState({ isDeleteMemberOpen: false })\n    }\n\n    handelUpdate = () => {\n        console.log('handelUpdate: ' + this.state.nameToUpdate + ' ' + this.state.numberToUpdate)\n    }\n\n    handelDelete = m => {\n        console.log('handelDelete: ' + this.state.nameToUpdate + ' ' + this.state.numberToUpdate)\n    }\n\n    render() {\n        const members = this.state.members\n\n        return (\n            <>\n                <UpdateMember\n                    open={this.state.isUpdateMemberOpen}\n                    onClose={this.handleCloseUpdateMember}\n                    onCancel={this.handleCancelUpdateMember}\n                    onSubmit={this.handelUpdate}\n                    isLoading={this.state.isUMLoading}\n                    isUIDisabled={this.state.isUMUIDisabled}\n                    errorMsg={this.state.errorUMMsg}\n                    name={this.state.nameToUpdate}\n                    number={this.state.numberToUpdate}\n                    OnChangeName={this.OnChangeName}\n                    onChangeNumber={this.onChangeNumber}\n                />\n\n                <DeleteMember\n                    open={this.state.isDeleteMemberOpen}\n                    onClose={this.handleCloseDeleteMember}\n                    onCancel={this.handleCancelDeleteMember}\n                    onSubmit={this.handelDelete}\n                    isLoading={this.state.isDMLoading}\n                    isUIDisabled={this.state.isDMUIDisabled}\n                    name={this.state.nameToUpdate}\n                    number={this.state.numberToUpdate}\n                />\n\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>name</th>\n                            <th>number</th>\n                            <th>options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {members.map((m, i) => {\n                            return <Row key={i} member={m} onUpdate={() => this.openUpdateMember(m)} onDelete={() => this.openDeleteMember(m)} />\n                        })}\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n\n}\n\nexport default Table","import React, { useState } from 'react'\nimport Modal from 'react-responsive-modal'\nimport styles from './AddMember.module.css'\nimport cs from 'classnames'\n\nconst AddMember = props => {\n    const { open, onClose, onSubmit, onCancel, isUIDisabled, isLoading, errorMsg } = props\n    const [mName, setMName] = useState('')\n    const [mNumber, setMNumber] = useState('')\n\n    const styledModal = {\n        modal: {\n            background: '#fff',\n            padding: 0,\n            borderRadius: '10px',\n            maxWidth: '500px',\n            width: '100%',\n            minHeight: '200px'\n        },\n        closeButton: {\n            display: 'none',\n        },\n    }\n\n    const clear = () => {\n        setMName('')\n        setMNumber('')\n    }\n\n\n    return (\n        <Modal open={open} onClose={onClose} center styles={styledModal}>\n            <div className=\"my-5 d-flex flex-column h-100\">\n                <div className=\"d-flex flex-column justify-content-center flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className={cs(styles.formWrapper, 'mx-auto')}>\n                                <div className={styles.form}>\n\n                                    <div className=\"my-5 text-center\">\n                                        <div className=\"row\">\n                                            <div className={cs('col-12', styles.red)}>\n                                                {errorMsg === ''\n                                                    ? <></>\n                                                    : <>{errorMsg}</>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"mName\"\n                                                        type=\"text\"\n                                                        value={mName}\n                                                        onChange={(e)=> setMName(e.target.value)}\n                                                        placeholder={'member name...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={cs(styles.formInputWrapper)}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className={styles.inputWrapper}>\n                                                    <input\n                                                        name=\"mNumber\"\n                                                        type=\"text\"\n                                                        value={mNumber}\n                                                        onChange={(e)=> setMNumber(e.target.value)}\n                                                        placeholder={'member number...'}\n                                                        className={styles.formInput}\n                                                        maxLength=\"500\"\n                                                        disabled={isUIDisabled}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={() => onSubmit(mName, mNumber, clear)} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        {isLoading\n                                                            ? <span className=\"spinner-border spinner-border-sm float-left mt-1\" role=\"status\" aria-hidden=\"true\"></span>\n                                                            : <></>\n                                                        }\n                                                        <span style={{ verticalAlign: 'text-top' }}>add</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"btn-wrapper text-center\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button type=\"submit\" onClick={onCancel} className={styles.submitBtn} disabled={isUIDisabled}>\n                                                    <span>\n                                                        <span style={{ verticalAlign: 'text-top' }}>cancel</span>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n\n}\n\n\nexport default AddMember","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styles from './Dashboard.module.css'\nimport List from './list/List'\nimport Table from './table/Table'\nimport { fetch, addMember } from '../../api/Circle'\nimport AddMember from './addMember/AddMember'\nimport cs from 'classnames'\n\nclass Dashboard extends Component {\n\n    state = {\n        selectedCircleID: '',\n        circle: {members: []},\n        isAddMemberOpen: false,\n        isAMLoading: false,\n        isAMUIDisabled: false,\n        errorAMMsg: '',\n    }\n\n    componentDidMount = async () => {\n        console.log(`Dashboard -> componentDidMount`)\n    }\n\n    componentDidUpdate = async (prevProps, prevState, snapshot) => {\n        console.log(`Dashboard -> componentDidUpdate`)\n        console.log(this.state.circle)\n    }\n\n    handleSelecteCircle = async (id) => {\n        console.log('handleSelecteCircle: ' + id)\n        this.setState({ selectedCircleID: id })\n\n        // fetch circle data\n        let c = await fetch(id)\n\n        if (c.status === 200) {\n            this.setState({ circle: c.data })\n        }\n\n        // TODO: handle error\n\n    }\n\n    openAddMember = () => {\n        this.setState({isAddMemberOpen: true})\n    }\n\n    handleCloseAddMember = () => {\n        console.log('modale AddMember closed')\n    }\n\n    handleCancelAddMember = () => {\n        console.log('modale AddMember closed')\n        this.setState({ isAddMemberOpen: false })\n    }\n\n    handleAddMember = async (name, number, clear) => {\n        console.log('handleAddMember:')\n        console.log(name)\n        console.log(number)\n\n        this.setState({\n            isAMLoading: true,\n            isAMUIDisabled: true,\n        })\n\n        let c = await addMember(this.state.circle, {name, number})\n        console.log('this is c')\n        console.log(c);\n        \n\n        this.setState({ \n            isAddMemberOpen: false,\n            isAMLoading: false,\n            isAMUIDisabled: false,\n         })\n\n         clear()\n        \n    }\n\n    render() {\n        const c = this.state.circle\n\n        return (\n            <div className={styles.root}>\n                <AddMember\n                    open={this.state.isAddMemberOpen}\n                    onClose={this.handleCloseAddMember}\n                    onCancel={this.handleCancelAddMember}\n                    onSubmit={this.handleAddMember}\n                    isLoading={this.state.isAMLoading}\n                    isUIDisabled={this.state.isAMUIDisabled}\n                    errorMsg={this.state.errorAMMsg}\n                />\n\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div className='isOpen'>\n                            <div>\n                                <List selectedCircle={this.state.selectedCircleID} onSelect={this.handleSelecteCircle} />\n                            </div>\n                        </div>\n\n                        <div className={'openSideMenu'}>\n                            \n                            { this.state.circle === undefined || Object.keys(this.state.circle).length === 1 \n                                ? <></>\n                                : <main>\n                                    <div className=\"row\">\n                                        <div className={styles.main}>\n                                            <h3 className={styles.title}>{c.name}</h3>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <button className={cs('btn', styles.addButton, 'mb-3')} onClick={this.openAddMember}><i className=\"fas fa-plus\"></i> add member</button>\n                                    </div>\n                                    <div className=\"row\">\n                                        <Table members={this.state.circle.members}/>\n                                    </div>\n                                </main>\n                            }\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Dashboard)\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { isLoggedIn } from './storage/local';\nimport { LOGIN_PATH, DASHBOARD_PATH, ROOT_PATH } from './config/routes';\nimport PrivateRoute from './components/privateRoute/PrivateRoute';\nimport Login from './routes/login/Login';\nimport Dashboard from './routes/dashboard/Dashboard';\n\nconst isAllowed = isLoggedIn\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path={ROOT_PATH} render={() => <Redirect to={LOGIN_PATH} />} />\n        <Route exact path={LOGIN_PATH} component={Login} />\n        <PrivateRoute path={DASHBOARD_PATH} component={Dashboard} isAllowed={isAllowed} redirectTo={() => LOGIN_PATH} />\n    </Switch>\n);\n\nexport default Routes;\n","import React from 'react'\nimport { DASHBOARD_PATH, isPublicRoute, LOGIN_PATH, PROFILE_PATH } from '../../config/routes'\nimport { Link, withRouter } from 'react-router-dom'\nimport styles from '../menu/Menu.module.css'\nimport cs from 'classnames'\n\nconst Menu = props => {\n    let showMenu = !isPublicRoute()\n\n    const logout = () => {\n        props.history.push(LOGIN_PATH)\n    }\n\n    const dashboardMenuItem = (\n        <div key=\"dashboardMenuItem\" className=\"row\">\n            <div className=\"col\">\n                <div className={styles.menuItemContainer}>\n                    <Link\n                        to={DASHBOARD_PATH}\n                        className={DASHBOARD_PATH === window.location.pathname ? cs(styles.menuItemContainer, styles.menuItemSelected) : styles.menuItemContainer}\n                    >\n                        <div className={cs(styles.dashboardItem, styles.icnContainer, styles.tooltip)} data-tooltip=\"dashboard\">\n                            <span className={styles.dashboardIcn} />\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n\n    const profileMenuItem = (\n        <div key=\"myProfileMenuItem\" className=\"row\">\n            <div className=\"col\">\n                <div className={styles.menuItemContainer}>\n                    <Link\n                        to={PROFILE_PATH}\n                        className={\n                            PROFILE_PATH === window.location.pathname\n                                ? cs(styles.menuItemContainer, styles.menuItemSelected)\n                                : styles.menuItemContainer\n                        }\n                    >\n                        <div className={cs(styles.myProfileItem, styles.icnContainer, styles.tooltip)} data-tooltip=\"my Profile\">\n                            <span className={styles.myProfileIcn} />\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n\n\n    let currentMenuItems = [dashboardMenuItem, profileMenuItem]\n\n    return showMenu\n    ?   <header className={styles.root}>\n            <div className={styles.sidebar}>\n                <div className=\"d-flex flex-column h-100\">\n                    <div className={styles.logo} />\n                    <div className=\"d-flex flex-column justify-content-center flex-grow-1\">{currentMenuItems}</div>\n                    <div className={styles.logout} onClick={logout}>\n                        <span className={styles.logoutIcon} />\n                    </div>\n                </div>\n            </div>\n        </header>\n    :   <></>\n    \n}\n\nexport default withRouter(Menu)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Routes from './Routes'\nimport styles from './App.module.css'\nimport Menu from './components/menu/Menu'\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className={styles.root}>\n                    <div className={styles.content}>\n                        <Menu />\n                        <Routes />\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render( < App / > , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"CreateCircle_formWrapper__1kut5\",\"form\":\"CreateCircle_form__3Sqqj\",\"formInputWrapper\":\"CreateCircle_formInputWrapper__OnM_j\",\"inputWrapper\":\"CreateCircle_inputWrapper___BPcW\",\"formInput\":\"CreateCircle_formInput__1L6FB\",\"submitBtn\":\"CreateCircle_submitBtn__1wjtp\",\"red\":\"CreateCircle_red__12AZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"List_root__19v1S\",\"topArea\":\"List_topArea__2dmRB\",\"addButton\":\"List_addButton__1xN4k\",\"listArea\":\"List_listArea__p5llO\",\"hasFilter\":\"List_hasFilter__2mv_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__Ty3kB\",\"main\":\"Dashboard_main__3MjOW\",\"bold\":\"Dashboard_bold__1QPLZ\",\"link\":\"Dashboard_link__6V9CU\",\"title\":\"Dashboard_title__3bcoI\",\"addButton\":\"Dashboard_addButton__3iwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListItem_root__2U6UX\",\"name\":\"ListItem_name__2Fn-B\",\"selected\":\"ListItem_selected__3F9-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"DeleteMember_formWrapper__2rxVB\",\"form\":\"DeleteMember_form__3tLzk\",\"formInputWrapper\":\"DeleteMember_formInputWrapper__26FuR\",\"inputWrapper\":\"DeleteMember_inputWrapper__kAn3E\",\"formInput\":\"DeleteMember_formInput__iZAv6\",\"submitBtn\":\"DeleteMember_submitBtn__3W-Wk\",\"red\":\"DeleteMember_red__1Qiqr\"};"],"sourceRoot":""}